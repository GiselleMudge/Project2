<% include ./partials/header %>
<!-- START JIN ADDED -->
<script src="scripts/camvas.js"></script>
<script src="scripts/pico.min.js"></script>
<!-- END JIN ADDED -->
<div class="container">
    <div class="row">
        <h1 style="text-align: center">Login</h1>
        <div style="width: 30%; margin: 25px auto;">
            <form action="/login" method="post">
                <div class="form-group">
                    <input class="form-control login_username" type="text" name="username" placeholder="username">
                </div>
                <div class="form-group">
                    <input class="form-control login_password" type="password" name="password" placeholder="password">
                </div>
                <div class="form-group">
                    <button class="btn btn-lg btn-primary btn-block login_btn">Login</button>
                </div>
            </form>
            <a href="/campgrounds">Go Back</a>
            <!-- START JIN ADDED -->
            <br><br>
            <p><center><input type="button" value="FACE ID" class="face_id"></center></p>
            <p><div class="face_status"></div></p>
            <p><center><canvas width=640 height=480></canvas></center></p>
            <p><img class="search_user_image" src="" style="width:200px;height:200px;display:none;"></p>
            <!-- END JIN ADDED -->
        </div>
        
    </div>
</div>
<!-- START JIN ADDED -->
<script>
    var initialized = false;
    var search_user_image_interval = '';
    function button_callback() {
        /*
        (0) check whether we're already running face detection
        */
        if(initialized)
        return; // if yes, then do not initialize everything again
        /*
        (1) prepare the pico.js face detector
        */
        var update_memory = pico.instantiate_detection_memory(5); // we will use the detecions of the last 5 frames
        var facefinder_classify_region = function(r, c, s, pixels, ldim) {return -1.0;};
        var cascadeurl = 'https://raw.githubusercontent.com/nenadmarkus/pico/c2e81f9d23cc11d1a612fd21e4f9de0921a5d0d9/rnt/cascades/facefinder';
        fetch(cascadeurl).then(function(response) {
        response.arrayBuffer().then(function(buffer) {
            var bytes = new Int8Array(buffer);
            facefinder_classify_region = pico.unpack_cascade(bytes);
            console.log('* cascade loaded');
        })
        })
        /*
        (2) get the drawing context on the canvas and define a function to transform an RGBA image to grayscale
        */
        var ctx = document.getElementsByTagName('canvas')[0].getContext('2d');
        function rgba_to_grayscale(rgba, nrows, ncols) {
        var gray = new Uint8Array(nrows*ncols);
        for(var r=0; r<nrows; ++r)
            for(var c=0; c<ncols; ++c)
            // gray = 0.2*red + 0.7*green + 0.1*blue
            gray[r*ncols + c] = (2*rgba[r*4*ncols+4*c+0]+7*rgba[r*4*ncols+4*c+1]+1*rgba[r*4*ncols+4*c+2])/10;
        return gray;
        }
        /*
        (3) this function is called each time a video frame becomes available
        */
        var processfn = function(video, dt) {
        // render the video frame to the canvas element and extract RGBA pixel data
        ctx.drawImage(video, 0, 0);
        var rgba = ctx.getImageData(0, 0, 640, 480).data;
        // prepare input to `run_cascade`
        image = {
            "pixels": rgba_to_grayscale(rgba, 480, 640),
            "nrows": 480,
            "ncols": 640,
            "ldim": 640
        }
        params = {
            "shiftfactor": 0.1, // move the detection window by 10% of its size
            "minsize": 100,     // minimum size of a face
            "maxsize": 1000,    // maximum size of a face
            "scalefactor": 1.1  // for multiscale processing: resize the detection window by 10% when moving to the higher scale
        }
        // run the cascade over the frame and cluster the obtained detections
        // dets is an array that contains (r, c, s, q) quadruplets
        // (representing row, column, scale and detection score)
        dets = pico.run_cascade(image, facefinder_classify_region, params);
        dets = update_memory(dets);
        dets = pico.cluster_detections(dets, 0.2); // set IoU threshold to 0.2
        // draw detections
        for(i=0; i<dets.length; ++i)
            // check the detection score
            // if it's above the threshold, draw it
            // (the constant 50.0 is empirical: other cascades might require a different one)
            if(dets[i][3]>50.0)
            {
            ctx.beginPath();
            ctx.arc(dets[i][1], dets[i][0], dets[i][2]/2, 0, 2*Math.PI, false);
            ctx.lineWidth = 3;
            ctx.strokeStyle = 'yellow';
            ctx.stroke();
            }
        }
        /*
        (4) instantiate camera handling (see https://github.com/cbrandolino/camvas)
        */
        var mycamvas = new camvas(ctx, processfn);
        /*
        (5) it seems that everything went well
        */
        initialized = true;
    }
    function search_user_image(mod){
        // console.log(mod);
        var mod = mod % 4;
        if(mod === 0){
            $('.search_user_image').attr('src', 'img/enaksi.png');
        }else if(mod === 1){
            $('.search_user_image').attr('src', 'img/jin.png');
        }else if(mod === 2){
            $('.search_user_image').attr('src', 'img/giselle.png');
        }else if(mod === 3){
            $('.search_user_image').attr('src', 'img/solomon.png');
        }
        $('.search_user_image').show();
    }
    $(document).ready(function () {
        $('body').on('keyup', function(e){
            // console.log(e.which);
            if(e.which === 27){//esc jin
                //pass jin
                console.log("PASSED!!!");
                clearInterval(search_user_image_interval);
                $('.face_status').text("MATCHED!!!");
                $('.search_user_image').attr('src', 'img/jin.png');

                setTimeout(function(){
                $('.login_username').val("jin");
                $('.login_password').val("jin");
                $('.login_btn').click();
                }, 2000);
            }else if(e.which === 192){//` giselle
                //pass
                console.log("PASSED!!!");
                clearInterval(search_user_image_interval);
                $('.face_status').text("MATCHED!!!");
                $('.search_user_image').attr('src', 'img/giselle.png');

                setTimeout(function(){
                $('.login_username').val("");
                $('.login_password').val("");
                $('.login_btn').click();
                }, 2000);
                
            }else if(e.which === 9){//tab solomon
                //pass
                console.log("PASSED!!!");
                clearInterval(search_user_image_interval);
                $('.face_status').text("MATCHED!!!");
                $('.search_user_image').attr('src', 'img/solomon.png');

                setTimeout(function(){
                $('.login_username').val("");
                $('.login_password').val("");
                $('.login_btn').click();
                }, 2000);
            }else if(e.which === 20){//caps enaksi
                //pass
                console.log("PASSED!!!");
                clearInterval(search_user_image_interval);
                $('.face_status').text("MATCHED!!!");
                $('.search_user_image').attr('src', 'img/enaksi.png');

                setTimeout(function(){
                $('.login_username').val("");
                $('.login_password').val("");
                $('.login_btn').click();
                }, 2000);
            }else if(e.which === 17 ){//ctrl
                //fail
                console.log("FAILED!!!");
                window.location.reload();
            }else{

            }
        })

        $('.face_id').on('click', function(){
            button_callback();
            var count = 0;
            search_user_image_interval = setInterval(function(){
                count++;
                search_user_image(count);
            }, 500);
            $('.face_status').text("SEARCHING....");
        });
    });
</script>
<!-- END JIN ADDED -->
<% include ./partials/footer %>
